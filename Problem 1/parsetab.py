
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '4D1DAAD7D627ADBCB7CF6FC017199B69'
    
_lr_action_items = {'QUOTE':([0,2,3,5,7,8,10,11,14,15,16,19,20,21,22,23,27,31,32,33,34,36,39,],[1,-17,-18,-22,-20,-19,-24,-23,1,-4,1,1,-10,-12,-11,-9,-14,-5,1,-16,-15,-9,-25,]),'$end':([0,2,3,5,6,7,8,9,10,11,12,13,15,27,31,33,34,39,],[-21,-17,-18,-22,-2,-20,-19,-3,-24,-23,0,-1,-4,-14,-5,-16,-15,-25,]),'NUM':([0,2,3,5,7,8,10,11,14,15,16,19,20,21,22,23,27,29,31,32,33,34,35,36,39,],[3,-17,-18,-22,-20,-19,-24,-23,3,-4,3,3,-10,-12,-11,-9,-14,3,-5,3,-16,-15,3,-9,-25,]),'LPAREN':([0,1,2,3,5,7,8,10,11,14,15,16,17,19,20,21,22,23,27,31,32,33,34,36,38,39,],[4,14,-17,-18,-22,-20,-19,-24,-23,4,-4,25,4,4,-10,-12,-11,-9,-14,-5,25,-16,-15,-9,-13,-25,]),'TRUE':([0,2,3,5,7,8,10,11,14,15,16,18,19,20,21,22,23,27,29,31,32,33,34,35,36,39,],[5,-17,-18,-22,-20,-19,-24,-23,5,-4,5,5,5,-10,-12,-11,-9,-14,5,-5,5,-16,-15,5,-9,-25,]),'TEXT':([0,2,3,5,7,8,10,11,14,15,16,19,20,21,22,23,27,29,31,32,33,34,35,36,39,],[7,-17,-18,-22,-20,-19,-24,-23,7,-4,7,7,-10,-12,-11,-9,-14,7,-5,7,-16,-15,7,-9,-25,]),'RPAREN':([2,3,5,7,8,10,11,14,15,16,17,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[-17,-18,-22,-20,-19,-24,-23,-8,-4,-8,27,-8,-10,-7,-11,-9,31,33,-14,34,-21,-6,-5,-8,-16,-15,-21,38,39,-13,-25,]),'SIMB':([0,2,3,4,5,7,8,10,11,14,15,16,19,20,21,22,23,25,27,29,31,32,33,34,35,36,39,],[8,-17,-18,16,-22,-20,-19,-24,-23,8,-4,8,8,-10,-12,-11,-9,32,-14,8,-5,8,-16,-15,8,-9,-25,]),'NIL':([0,2,3,5,7,8,10,11,14,15,16,19,20,21,22,23,27,29,31,32,33,34,35,36,39,],[10,-17,-18,-22,-20,-19,-24,-23,10,-4,10,10,-10,-12,-11,-9,-14,10,-5,10,-16,-15,10,-9,-25,]),'FALSE':([0,2,3,5,7,8,10,11,14,15,16,18,19,20,21,22,23,27,29,31,32,33,34,35,36,39,],[11,-17,-18,-22,-20,-19,-24,-23,11,-4,11,11,11,-10,-12,-11,-9,-14,11,-5,11,-16,-15,11,-9,-25,]),'IF':([4,25,],[18,18,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'item':([14,16,19,32,],[19,19,19,19,]),'bool':([0,14,16,18,19,29,32,35,],[2,2,2,29,2,2,2,2,]),'quoted_list':([0,14,16,19,32,],[6,20,20,20,20,]),'list':([1,],[15,]),'calllet':([4,25,],[17,17,]),'empty':([14,16,19,32,],[21,21,21,21,]),'call':([0,14,16,17,19,32,],[9,22,22,28,22,22,]),'exp':([0,],[12,]),'atom':([0,14,16,19,29,32,35,],[13,23,23,23,35,36,37,]),'items':([14,16,19,32,],[24,26,30,26,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> exp","S'",1,None,None,None),
  ('exp -> atom','exp',1,'p_exp_atom','yacc.py',141),
  ('exp -> quoted_list','exp',1,'p_exp_qlist','yacc.py',145),
  ('exp -> call','exp',1,'p_exp_call','yacc.py',149),
  ('quoted_list -> QUOTE list','quoted_list',2,'p_quoted_list','yacc.py',153),
  ('list -> LPAREN items RPAREN','list',3,'p_list','yacc.py',157),
  ('items -> item items','items',2,'p_items','yacc.py',161),
  ('items -> empty','items',1,'p_items_empty','yacc.py',165),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',169),
  ('item -> atom','item',1,'p_item_atom','yacc.py',173),
  ('item -> quoted_list','item',1,'p_item_list','yacc.py',181),
  ('item -> call','item',1,'p_item_call','yacc.py',185),
  ('item -> empty','item',1,'p_item_empty','yacc.py',189),
  ('calllet -> SIMB LPAREN SIMB atom RPAREN','calllet',5,'p_call_let','yacc.py',193),
  ('call -> LPAREN calllet RPAREN','call',3,'p_call_let2','yacc.py',203),
  ('call -> LPAREN calllet call RPAREN','call',4,'p_call_2','yacc.py',208),
  ('call -> LPAREN SIMB items RPAREN','call',4,'p_call','yacc.py',219),
  ('atom -> bool','atom',1,'p_atom_bool','yacc.py',240),
  ('atom -> NUM','atom',1,'p_atom_num','yacc.py',244),
  ('atom -> SIMB','atom',1,'p_atom_word','yacc.py',249),
  ('atom -> TEXT','atom',1,'p_atom_word','yacc.py',250),
  ('atom -> <empty>','atom',0,'p_atom_empty','yacc.py',262),
  ('bool -> TRUE','bool',1,'p_true','yacc.py',266),
  ('bool -> FALSE','bool',1,'p_false','yacc.py',270),
  ('atom -> NIL','atom',1,'p_nil','yacc.py',274),
  ('call -> LPAREN IF bool atom atom RPAREN','call',6,'p_call_bool','yacc.py',293),
]
